[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dylan Pieper. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pieper D (2025). shinysurveyjs: Create Deploy Surveys Shiny. R package version 0.0.0.9000.","code":"@Manual{,   title = {shinysurveyjs: Create and Deploy Surveys in Shiny},   author = {Dylan Pieper},   year = {2025},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"shinysurveyjs","dir":"","previous_headings":"","what":"Create and Deploy Surveys in Shiny","title":"Create and Deploy Surveys in Shiny","text":"goal package integrate flexible frontend SurveyJS library reactive backend Shiny interface PostgreSQL database create dynamic user experiences. Whether need simple feedback form complex survey system organization, package designed scale .","code":""},{"path":"/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key Features","title":"Create and Deploy Surveys in Shiny","text":"Host single survey multiple surveys one app Design surveys create json objects user-friendly visual editor Dynamically populate field choices (.e., response options) database table create dependent fields (e.g., select car brand filter available models) URL query tokens one-time access tokens secure survey distribution Asynchronous worker handle database updates near real-time 🚧 Warning: features construction moved app template.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create and Deploy Surveys in Shiny","text":"","code":"# Install from GitHub pak::pkg_install(\"dylanpieper/shinysurveyjs\")"},{"path":[]},{"path":"/index.html","id":"single-survey","dir":"","previous_headings":"Basic Usage","what":"Single Survey","title":"Create and Deploy Surveys in Shiny","text":"Read survey json object host single survey. Data stored PostgreSQL database table hosted Supabase.","code":"library(shinysurveyjs)  survey <- '{   \"title\": \"R Package Feedback\",   \"pages\": [     {       \"name\": \"userInfo\",       \"elements\": [         {           \"type\": \"rating\",           \"name\": \"rating\",           \"title\": \"Please rate the shinysurveyjs 📦:\",           \"rateValues\": [             {\"value\": 1, \"text\": \"⭐\"},             {\"value\": 2, \"text\": \"⭐⭐\"},             {\"value\": 3, \"text\": \"⭐⭐⭐\"},             {\"value\": 4, \"text\": \"⭐⭐⭐⭐\"},             {\"value\": 5, \"text\": \"⭐⭐⭐⭐⭐\"}           ],           \"rateMax\": 5         },         {           \"type\": \"comment\",           \"name\": \"feedback\",           \"visibleIf\": \"{rating} notempty\",           \"title\": \"Why did you rate it {rating} stars?\",           \"rows\": 2         }       ]     }   ] }'   survey_single(   json = survey,   show_response = TRUE,   theme_color = \"#00AD6E\",   theme_mode = \"dark\",   shiny_config = list(     host = \"0.0.0.0\",     port = 3838,     workers = 100,     sanitize_errors = TRUE,     autoreload = FALSE   ),   db_config = list(     write_table = \"survey_package_feedback\",     host = \"aws-0-us-east-2.pooler.supabase.com\",     port = 5432,     dbname = \"postgres\",     user = \"username\",     password = \"password\"   ) )"},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 shinysurveyjs authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/cleanup_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Application Resources — cleanup_app","title":"Clean Application Resources — cleanup_app","text":"Closes database connection pool performs cleanup operations application shutting .","code":""},{"path":"/reference/cleanup_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Application Resources — cleanup_app","text":"","code":"cleanup_app(session)"},{"path":"/reference/cleanup_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Application Resources — cleanup_app","text":"session Shiny session object","code":""},{"path":"/reference/cleanup_pool.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Up Database Pool — cleanup_pool","title":"Clean Up Database Pool — cleanup_pool","text":"Closes database pool removes lock files.","code":""},{"path":"/reference/cleanup_pool.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Up Database Pool — cleanup_pool","text":"","code":"cleanup_pool(pool)"},{"path":"/reference/cleanup_pool.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Up Database Pool — cleanup_pool","text":"pool Database pool object close","code":""},{"path":"/reference/configure_shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Shiny Application Settings — configure_shiny","title":"Configure Shiny Application Settings — configure_shiny","text":"Configure Shiny Application Settings","code":""},{"path":"/reference/configure_shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Shiny Application Settings — configure_shiny","text":"","code":"configure_shiny(..., type_handlers = list())"},{"path":"/reference/configure_shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Shiny Application Settings — configure_shiny","text":"... Named arguments corresponding Shiny options. Names prefixed 'shiny.' type_handlers Named list functions process specific options. Default handlers provided numeric, logical, character values.","code":""},{"path":"/reference/configure_shiny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Shiny Application Settings — configure_shiny","text":"NULL (invisibly). Sets global options Shiny.","code":""},{"path":"/reference/configure_shiny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Shiny Application Settings — configure_shiny","text":"","code":"configure_shiny(   host = \"0.0.0.0\",   port = 3838,   workers = 100,   sanitize_errors = TRUE,   autoreload = FALSE ) #> Error in configure_shiny(host = \"0.0.0.0\", port = 3838, workers = 100,     sanitize_errors = TRUE, autoreload = FALSE): could not find function \"configure_shiny\"  # With custom type handler configure_shiny(   special_option = c(1,2,3),   type_handlers = list(     special_option = function(x) paste(x, collapse=\",\")   ) ) #> Error in configure_shiny(special_option = c(1, 2, 3), type_handlers = list(special_option = function(x) paste(x,     collapse = \",\"))): could not find function \"configure_shiny\""},{"path":"/reference/db_ops.html","id":null,"dir":"Reference","previous_headings":"","what":"Database Operations Class — db_ops","title":"Database Operations Class — db_ops","text":"R6 Class managing database operations related survey data storage retrieval using PostgreSQL.","code":""},{"path":"/reference/db_ops.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Database Operations Class — db_ops","text":"session_id Character. Unique identifier current session pool Pool object. Database connection pool","code":""},{"path":[]},{"path":"/reference/db_ops.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Database Operations Class — db_ops","text":"db_ops$new() db_ops$create_survey_data_table() db_ops$check_table_exists() db_ops$execute_db_operation() db_ops$update_survey_data_table() db_ops$clone()","code":""},{"path":"/reference/db_ops.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Database Operations Class — db_ops","text":"Initialize new db_ops instance","code":""},{"path":"/reference/db_ops.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Database Operations Class — db_ops","text":"","code":"db_ops$new(pool, session_id)"},{"path":"/reference/db_ops.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Database Operations Class — db_ops","text":"pool Database connection pool session_id Session identifier","code":""},{"path":"/reference/db_ops.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Database Operations Class — db_ops","text":"new db_ops object","code":""},{"path":"/reference/db_ops.html","id":"method-create-survey-data-table-","dir":"Reference","previous_headings":"","what":"Method create_survey_data_table()","title":"Database Operations Class — db_ops","text":"Create new survey data table","code":""},{"path":"/reference/db_ops.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Database Operations Class — db_ops","text":"","code":"db_ops$create_survey_data_table(survey_name, data)"},{"path":"/reference/db_ops.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Database Operations Class — db_ops","text":"survey_name Character. Name survey data data.frame. Survey data stored","code":""},{"path":"/reference/db_ops.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Database Operations Class — db_ops","text":"Character. Name created table (invisible)","code":""},{"path":"/reference/db_ops.html","id":"method-check-table-exists-","dir":"Reference","previous_headings":"","what":"Method check_table_exists()","title":"Database Operations Class — db_ops","text":"Check table exists database","code":""},{"path":"/reference/db_ops.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Database Operations Class — db_ops","text":"","code":"db_ops$check_table_exists(table_name)"},{"path":"/reference/db_ops.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Database Operations Class — db_ops","text":"table_name Character. Name table check","code":""},{"path":"/reference/db_ops.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Database Operations Class — db_ops","text":"Logical indicating table exists","code":""},{"path":"/reference/db_ops.html","id":"method-execute-db-operation-","dir":"Reference","previous_headings":"","what":"Method execute_db_operation()","title":"Database Operations Class — db_ops","text":"Execute database operation appropriate connection handling","code":""},{"path":"/reference/db_ops.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Database Operations Class — db_ops","text":"","code":"db_ops$execute_db_operation(operation, error_message)"},{"path":"/reference/db_ops.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Database Operations Class — db_ops","text":"operation Function. database operation execute error_message Character. Error message operation fails","code":""},{"path":"/reference/db_ops.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Database Operations Class — db_ops","text":"Result database operation","code":""},{"path":"/reference/db_ops.html","id":"method-update-survey-data-table-","dir":"Reference","previous_headings":"","what":"Method update_survey_data_table()","title":"Database Operations Class — db_ops","text":"Update existing survey data table new data","code":""},{"path":"/reference/db_ops.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Database Operations Class — db_ops","text":"","code":"db_ops$update_survey_data_table(survey_name, data)"},{"path":"/reference/db_ops.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Database Operations Class — db_ops","text":"survey_name Character. Name survey data data.frame. New survey data append","code":""},{"path":"/reference/db_ops.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Database Operations Class — db_ops","text":"Character. Name updated table (invisible)","code":""},{"path":"/reference/db_ops.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Database Operations Class — db_ops","text":"objects class cloneable method.","code":""},{"path":"/reference/db_ops.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Database Operations Class — db_ops","text":"","code":"db_ops$clone(deep = FALSE)"},{"path":"/reference/db_ops.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Database Operations Class — db_ops","text":"deep Whether make deep clone.","code":""},{"path":"/reference/initialize_pool.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize Database Pool — initialize_pool","title":"Initialize Database Pool — initialize_pool","text":"Creates manages global database pool connection using PostgreSQL.","code":""},{"path":"/reference/initialize_pool.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize Database Pool — initialize_pool","text":"","code":"initialize_pool(   host = NULL,   port = NULL,   db_name = NULL,   user = NULL,   password = NULL,   min_size = 1,   max_size = Inf )"},{"path":"/reference/initialize_pool.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize Database Pool — initialize_pool","text":"host Database host port Database port db_name Database name user Database username password Database password min_size Minimum pool size (default: 1) max_size Maximum pool size (default: Inf)","code":""},{"path":"/reference/initialize_pool.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize Database Pool — initialize_pool","text":"database pool object","code":""},{"path":"/reference/surveyUI.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Survey UI — surveyUI","title":"Create Survey UI — surveyUI","text":"Create Survey UI","code":""},{"path":"/reference/surveyUI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Survey UI — surveyUI","text":"","code":"surveyUI(   id = \"surveyContainer\",   theme = \"defaultV2\",   primary = \"#003594\",   mode = \"light\" )"},{"path":"/reference/surveyUI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Survey UI — surveyUI","text":"id Optional id survey div container (default \"surveyContainer\") theme Theme name (\"defaultV2\" \"modern\") primary Primary color hex code (optional) mode Color mode (\"light\" \"dark\")","code":""},{"path":"/reference/surveyUI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Survey UI — surveyUI","text":"tagList containing survey dependencies container","code":""},{"path":"/reference/survey_css.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey CSS with Theme Support — survey_css","title":"Survey CSS with Theme Support — survey_css","text":"Returns CSS code needed survey Shiny application light/dark theme support.","code":""},{"path":"/reference/survey_css.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survey CSS with Theme Support — survey_css","text":"","code":"survey_css(   primary = \"#003594\",   primary_foreground = \"#ffffff\",   background = \"#ffffff\",   foreground = \"#404040\",   mode = \"light\",   css_string = NULL )"},{"path":"/reference/survey_css.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survey CSS with Theme Support — survey_css","text":"primary Primary color hex format (default: \"#003594\") primary_foreground Text color primary elements (default: \"#ffffff\") background Background color (default: \"#ffffff\") foreground Main text color (default: \"#404040\") mode Color mode selection: \"light\" \"dark\" (default: \"light\") css_string Optional custom CSS string override default styles","code":""},{"path":"/reference/survey_css.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Survey CSS with Theme Support — survey_css","text":"character string containing CSS code","code":""},{"path":"/reference/survey_css.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survey CSS with Theme Support — survey_css","text":"","code":"if (FALSE) { # \\dontrun{ # Light mode tags$script(survey_css())  # Dark mode tags$script(survey_css(mode = \"dark\"))  # Custom dark mode colors tags$script(survey_css(   theme = \"dark\",   primary = \"#7289da\",   background = \"#2c2f33\" )) } # }"},{"path":"/reference/survey_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Single Survey — survey_single","title":"Create a Single Survey — survey_single","text":"Creates Shiny application single survey database integration. Responses stored PostgreSQL database configurable table name.","code":""},{"path":"/reference/survey_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Single Survey — survey_single","text":"","code":"survey_single(   json,   show_response = TRUE,   theme = \"defaultV2\",   theme_color = \"#003594\",   theme_mode = \"light\",   shiny_config = NULL,   db_config = list(host = Sys.getenv(\"HOST\"), port = as.numeric(Sys.getenv(\"PORT\")),     db_name = Sys.getenv(\"DB_NAME\"), user = Sys.getenv(\"USER\"), password =     Sys.getenv(\"PASSWORD\"), write_table = Sys.getenv(\"WRITE_TABLE\")) )"},{"path":"/reference/survey_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Single Survey — survey_single","text":"json Survey JSON string object defining survey structure show_response Logical. Whether show responses submission (default: TRUE) theme Theme name SurveyJS: \"defaultV2\" \"modern\" (default: \"defaultV2\") theme_color Primary color hex code theme customization theme_mode Color mode selection: \"light\" \"dark\" (default: \"light\") shiny_config Optional list. Shiny configuration parameters passed configure_shiny() db_config List. Database connection parameters (defaults environment variables): host: Database host (default: HOST environment variable) port: Database port (default: PORT environment variable) db_name: Database name (default: DB_NAME environment variable) user: Database username (default: USER environment variable) password: Database password (default: PASSWORD environment variable) write_table: Table name write survey data (default: WRITE_TABLE environment variable)","code":""},{"path":"/reference/survey_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Single Survey — survey_single","text":"Shiny application object","code":""},{"path":"/reference/survey_single.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Single Survey — survey_single","text":"","code":"if (FALSE) { # \\dontrun{ library(shinysurveyjs)  # Define a package feedback survey with rating and conditional comment survey <- '{   \"title\": \"R Package Feedback\",   \"pages\": [     {       \"name\": \"userInfo\",       \"elements\": [         {           \"type\": \"rating\",           \"name\": \"rating\",           \"title\": \"Please rate the shinysurveyjs 📦:\",           \"rateValues\": [             {\"value\": 1, \"text\": \"⭐\"},             {\"value\": 2, \"text\": \"⭐⭐\"},             {\"value\": 3, \"text\": \"⭐⭐⭐\"},             {\"value\": 4, \"text\": \"⭐⭐⭐⭐\"},             {\"value\": 5, \"text\": \"⭐⭐⭐⭐⭐\"}           ],           \"rateMax\": 5         },         {           \"type\": \"comment\",           \"name\": \"feedback\",           \"visibleIf\": \"{rating} notempty\",           \"title\": \"Why did you rate it {rating} stars?\",           \"rows\": 2         }       ]     }   ] }'  # Create and launch the survey application survey_single(   json = survey,   show_response = TRUE,   theme_color = \"#00AD6E\",   theme_mode = \"dark\",   shiny_config = list(     host = \"0.0.0.0\",     port = 3838,     workers = 100,     sanitize_errors = TRUE,     autoreload = FALSE   ),   db_config = list(     host = \"pooler.supabase.com\",     port = 5432,     dbname = \"postgres\",     user = Sys.getenv(\"DB_USER\"),     password = Sys.getenv(\"DB_PASSWORD\"),     write_table = \"survey_package_feedback\"   ) ) } # }"},{"path":"/reference/survey_single_js.html","id":null,"dir":"Reference","previous_headings":"","what":"Single Survey JavaScript — survey_single_js","title":"Single Survey JavaScript — survey_single_js","text":"Returns JavaScript code needed initialize handle single survey Shiny application. JavaScript code sets event handlers survey completion enables communication survey Shiny.","code":""},{"path":"/reference/survey_single_js.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single Survey JavaScript — survey_single_js","text":"","code":"survey_single_js()"},{"path":"/reference/survey_single_js.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Single Survey JavaScript — survey_single_js","text":"character string containing JavaScript code survey initialization","code":""},{"path":"/reference/survey_single_js.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Single Survey JavaScript — survey_single_js","text":"","code":"if (FALSE) { # \\dontrun{ # Use in ui.R or similar: tags$script(survey_single_js()) } # }"}]
