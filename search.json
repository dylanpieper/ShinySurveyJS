[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 shinysurveyjs authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dylan Pieper. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pieper D (2025). shinysurveyjs: Create Deploy Surveys Shiny. R package version 0.0.0.9000.","code":"@Manual{,   title = {shinysurveyjs: Create and Deploy Surveys in Shiny},   author = {Dylan Pieper},   year = {2025},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"shinysurveyjs","dir":"","previous_headings":"","what":"Create and Deploy Surveys in Shiny","title":"Create and Deploy Surveys in Shiny","text":"goal package integrate flexible frontend SurveyJS library reactive backend Shiny interface PostgreSQL database create dynamic user experiences. Whether need simple feedback form complex survey system organization, package designed scale .","code":""},{"path":"/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key Features","title":"Create and Deploy Surveys in Shiny","text":"Host single survey multiple surveys one app Design surveys create json objects user-friendly visual editor Dynamically populate choices (.e., response options) database table create dependent inputs (e.g., select car brand filter available models) Dynamically stage JSON objects database modify surveys using staging table URL query tokens one-time access tokens secure survey distribution Asynchronous worker handle database updates without interrupting survey, including app logging, updating staged survey JSONs, managing tokens üöß Warning: features construction moved app template.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create and Deploy Surveys in Shiny","text":"","code":"# Install from GitHub pak::pkg_install(\"dylanpieper/shinysurveyjs\")"},{"path":[]},{"path":"/index.html","id":"single-survey","dir":"","previous_headings":"Basic Usage","what":"Single Survey","title":"Create and Deploy Surveys in Shiny","text":"Read survey json object host single survey. Data stored PostgreSQL database table hosted Supabase.","code":"library(shinysurveyjs)  survey <- '{   \"title\": \"R Package Feedback\",   \"pages\": [     {       \"name\": \"userInfo\",       \"elements\": [         {           \"type\": \"rating\",           \"name\": \"rating\",           \"title\": \"Please rate the shinysurveyjs üì¶:\",           \"rateValues\": [             {\"value\": 1, \"text\": \"‚≠ê\"},             {\"value\": 2, \"text\": \"‚≠ê‚≠ê\"},             {\"value\": 3, \"text\": \"‚≠ê‚≠ê‚≠ê\"},             {\"value\": 4, \"text\": \"‚≠ê‚≠ê‚≠ê‚≠ê\"},             {\"value\": 5, \"text\": \"‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\"}           ],           \"rateMax\": 5,           \"isRequired\": true         },         {           \"type\": \"comment\",           \"name\": \"feedback\",           \"visibleIf\": \"{rating} notempty\",           \"title\": \"Why did you rate it {rating} stars?\",           \"rows\": 2         },         {           \"type\": \"html\",           \"name\": \"lowRatingMessage\",           \"visibleIf\": \"{rating} <= 2\",           \"html\": \"I am sorry you had a poor experience. Please reach out to me at <b>dylanpieper@gmail.com<\/b> so I can help improve your experience.\"         }       ]     }   ] }'  survey_single(   json = survey,   show_response = TRUE,   theme_color = \"#00AD6E\",   theme_mode = \"dark\",   shiny_config = list(     host = \"0.0.0.0\",     port = 3838,     sanitize_errors = TRUE,     autoreload = FALSE   ),   db_config = list(     host = \"aws-0-us-east-2.pooler.supabase.com\",     port = 5432,     db_name = \"postgres\",     user = \"username\",     password = \"password\",     write_table = \"survey_package_feedback\",     log_table = \"survey_app_logs\"   ) )"},{"path":"/reference/adjust_hex.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust Hexadecimal Color Values ‚Äî adjust_hex","title":"Adjust Hexadecimal Color Values ‚Äî adjust_hex","text":"Adjusts hexadecimal color value lightening darkening specified percentage. function modifies RGB component ensuring values stay within valid ranges (0-255).","code":""},{"path":"/reference/adjust_hex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust Hexadecimal Color Values ‚Äî adjust_hex","text":"","code":"adjust_hex(hex, percent = 25, lighten = TRUE)"},{"path":"/reference/adjust_hex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust Hexadecimal Color Values ‚Äî adjust_hex","text":"hex Character string. hexadecimal color code (e.g., \"#003594\" \"003594\") percent Numeric. Percentage adjust color (default: 25) lighten Logical. TRUE, lightens color; FALSE, darkens (default: TRUE)","code":""},{"path":"/reference/adjust_hex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust Hexadecimal Color Values ‚Äî adjust_hex","text":"Character string. adjusted hexadecimal color code leading \"#\"","code":""},{"path":"/reference/adjust_hex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust Hexadecimal Color Values ‚Äî adjust_hex","text":"","code":"# Lighten a color by 25% adjust_hex(\"#003594\") # Default lighten by 25% #> Error in adjust_hex(\"#003594\"): could not find function \"adjust_hex\"  # Darken a color by 30% adjust_hex(\"#003594\", percent = 30, lighten = FALSE) #> Error in adjust_hex(\"#003594\", percent = 30, lighten = FALSE): could not find function \"adjust_hex\"  # Lighten a color by 50% adjust_hex(\"003594\", percent = 50) # Works with or without leading \"#\" #> Error in adjust_hex(\"003594\", percent = 50): could not find function \"adjust_hex\""},{"path":"/reference/clean_pool.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Database Pool ‚Äî clean_pool","title":"Clean Database Pool ‚Äî clean_pool","text":"Closes database connection pool performs cleanup operations application shutting .","code":""},{"path":"/reference/clean_pool.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Database Pool ‚Äî clean_pool","text":"","code":"clean_pool(session)"},{"path":"/reference/clean_pool.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Database Pool ‚Äî clean_pool","text":"session Shiny session object","code":""},{"path":"/reference/configure_shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Shiny App Settings ‚Äî configure_shiny","title":"Configure Shiny App Settings ‚Äî configure_shiny","text":"Configure Shiny App Settings","code":""},{"path":"/reference/configure_shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Shiny App Settings ‚Äî configure_shiny","text":"","code":"configure_shiny(..., type_handlers = list())"},{"path":"/reference/configure_shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Shiny App Settings ‚Äî configure_shiny","text":"... Named arguments corresponding Shiny options. Names prefixed 'shiny.' type_handlers Named list functions process specific options. Default handlers provided numeric, logical, character values.","code":""},{"path":"/reference/configure_shiny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Shiny App Settings ‚Äî configure_shiny","text":"NULL (invisibly). Sets global options Shiny.","code":""},{"path":"/reference/configure_shiny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Shiny App Settings ‚Äî configure_shiny","text":"","code":"configure_shiny(   host = \"0.0.0.0\",   port = 3838,   workers = 100,   sanitize_errors = TRUE,   autoreload = FALSE )  # With custom type handler configure_shiny(   special_option = c(1, 2, 3),   type_handlers = list(     special_option = function(x) paste(x, collapse = \",\")   ) )"},{"path":"/reference/db_ops.html","id":null,"dir":"Reference","previous_headings":"","what":"Database Operations Class ‚Äî db_ops","title":"Database Operations Class ‚Äî db_ops","text":"R6 Class managing database operations related survey data storage retrieval using PostgreSQL.","code":""},{"path":"/reference/db_ops.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Database Operations Class ‚Äî db_ops","text":"session_id Character. Unique identifier current session pool Pool object. Database connection pool","code":""},{"path":[]},{"path":"/reference/db_ops.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Database Operations Class ‚Äî db_ops","text":"db_ops$new() db_ops$create_survey_data_table() db_ops$check_table_exists() db_ops$execute_db_operation() db_ops$update_survey_data_table() db_ops$clone()","code":""},{"path":"/reference/db_ops.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Database Operations Class ‚Äî db_ops","text":"Initialize new db_ops instance","code":""},{"path":"/reference/db_ops.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Database Operations Class ‚Äî db_ops","text":"","code":"db_ops$new(pool, session_id)"},{"path":"/reference/db_ops.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Database Operations Class ‚Äî db_ops","text":"pool Database connection pool session_id Session identifier","code":""},{"path":"/reference/db_ops.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Database Operations Class ‚Äî db_ops","text":"new db_ops object","code":""},{"path":"/reference/db_ops.html","id":"method-create-survey-data-table-","dir":"Reference","previous_headings":"","what":"Method create_survey_data_table()","title":"Database Operations Class ‚Äî db_ops","text":"Create new survey data table","code":""},{"path":"/reference/db_ops.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Database Operations Class ‚Äî db_ops","text":"","code":"db_ops$create_survey_data_table(survey_name, data)"},{"path":"/reference/db_ops.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Database Operations Class ‚Äî db_ops","text":"survey_name Character. Name survey data data.frame. Survey data stored","code":""},{"path":"/reference/db_ops.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Database Operations Class ‚Äî db_ops","text":"Character. Name created table (invisible)","code":""},{"path":"/reference/db_ops.html","id":"method-check-table-exists-","dir":"Reference","previous_headings":"","what":"Method check_table_exists()","title":"Database Operations Class ‚Äî db_ops","text":"Check table exists database","code":""},{"path":"/reference/db_ops.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Database Operations Class ‚Äî db_ops","text":"","code":"db_ops$check_table_exists(table_name)"},{"path":"/reference/db_ops.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Database Operations Class ‚Äî db_ops","text":"table_name Character. Name table check","code":""},{"path":"/reference/db_ops.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Database Operations Class ‚Äî db_ops","text":"Logical indicating table exists","code":""},{"path":"/reference/db_ops.html","id":"method-execute-db-operation-","dir":"Reference","previous_headings":"","what":"Method execute_db_operation()","title":"Database Operations Class ‚Äî db_ops","text":"Execute database operation appropriate connection handling","code":""},{"path":"/reference/db_ops.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Database Operations Class ‚Äî db_ops","text":"","code":"db_ops$execute_db_operation(operation, error_message)"},{"path":"/reference/db_ops.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Database Operations Class ‚Äî db_ops","text":"operation Function. database operation execute error_message Character. Error message operation fails","code":""},{"path":"/reference/db_ops.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Database Operations Class ‚Äî db_ops","text":"Result database operation","code":""},{"path":"/reference/db_ops.html","id":"method-update-survey-data-table-","dir":"Reference","previous_headings":"","what":"Method update_survey_data_table()","title":"Database Operations Class ‚Äî db_ops","text":"Update existing survey data table new data","code":""},{"path":"/reference/db_ops.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Database Operations Class ‚Äî db_ops","text":"","code":"db_ops$update_survey_data_table(survey_name, data)"},{"path":"/reference/db_ops.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Database Operations Class ‚Äî db_ops","text":"survey_name Character. Name survey data data.frame. New survey data append","code":""},{"path":"/reference/db_ops.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Database Operations Class ‚Äî db_ops","text":"Character. Name updated table (invisible)","code":""},{"path":"/reference/db_ops.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Database Operations Class ‚Äî db_ops","text":"objects class cloneable method.","code":""},{"path":"/reference/db_ops.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Database Operations Class ‚Äî db_ops","text":"","code":"db_ops$clone(deep = FALSE)"},{"path":"/reference/db_ops.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Database Operations Class ‚Äî db_ops","text":"deep Whether make deep clone.","code":""},{"path":"/reference/hide_and_show_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Hide One Message and Show Another ‚Äî hide_and_show_message","title":"Hide One Message and Show Another ‚Äî hide_and_show_message","text":"Hide One Message Show Another","code":""},{"path":"/reference/hide_and_show_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hide One Message and Show Another ‚Äî hide_and_show_message","text":"","code":"hide_and_show_message(hide_id, show_id, fade_time = 1)"},{"path":"/reference/hide_and_show_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hide One Message and Show Another ‚Äî hide_and_show_message","text":"hide_id ID message hide show_id ID message show fade_time Time seconds fade animation (default: 1)","code":""},{"path":"/reference/initialize_pool.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize Database Pool ‚Äî initialize_pool","title":"Initialize Database Pool ‚Äî initialize_pool","text":"Creates manages global database pool connection using PostgreSQL.","code":""},{"path":"/reference/initialize_pool.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize Database Pool ‚Äî initialize_pool","text":"","code":"initialize_pool(   host = NULL,   port = NULL,   db_name = NULL,   user = NULL,   password = NULL,   min_size = 1,   max_size = Inf )"},{"path":"/reference/initialize_pool.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize Database Pool ‚Äî initialize_pool","text":"host Database host port Database port db_name Database name user Database username password Database password min_size Minimum pool size (default: 1) max_size Maximum pool size (default: Inf)","code":""},{"path":"/reference/initialize_pool.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize Database Pool ‚Äî initialize_pool","text":"database pool object","code":""},{"path":"/reference/surveyUI.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Survey UI with Message Components ‚Äî surveyUI","title":"Create Survey UI with Message Components ‚Äî surveyUI","text":"Create Survey UI Message Components","code":""},{"path":"/reference/surveyUI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Survey UI with Message Components ‚Äî surveyUI","text":"","code":"surveyUI(   id = \"surveyContainer\",   theme = \"defaultV2\",   primary = \"#003594\",   mode = \"light\" )"},{"path":"/reference/surveyUI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Survey UI with Message Components ‚Äî surveyUI","text":"id Optional id survey div container (default \"surveyContainer\") theme Theme name (\"defaultV2\" \"modern\") primary Primary color hex code (optional) mode Color mode (\"light\" \"dark\")","code":""},{"path":"/reference/surveyUI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Survey UI with Message Components ‚Äî surveyUI","text":"tagList containing survey dependencies container","code":""},{"path":"/reference/survey_css.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey CSS with Theme Support ‚Äî survey_css","title":"Survey CSS with Theme Support ‚Äî survey_css","text":"Returns CSS code needed survey Shiny application light/dark theme support.","code":""},{"path":"/reference/survey_css.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survey CSS with Theme Support ‚Äî survey_css","text":"","code":"survey_css(   primary = \"#003594\",   primary_foreground = \"#ffffff\",   background = \"#ffffff\",   foreground = \"#404040\",   mode = \"light\",   css_string = NULL )"},{"path":"/reference/survey_css.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survey CSS with Theme Support ‚Äî survey_css","text":"primary Primary color hex format (default: \"#003594\") primary_foreground Text color primary elements (default: \"#ffffff\") background Background color (default: \"#ffffff\") foreground Main text color (default: \"#404040\") mode Color mode selection: \"light\" \"dark\" (default: \"light\") css_string Optional custom CSS string override default styles","code":""},{"path":"/reference/survey_css.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Survey CSS with Theme Support ‚Äî survey_css","text":"character string containing CSS code","code":""},{"path":"/reference/survey_css.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survey CSS with Theme Support ‚Äî survey_css","text":"","code":"if (FALSE) { # \\dontrun{ # Light mode tags$script(survey_css())  # Dark mode tags$script(survey_css(mode = \"dark\"))  # Custom dark mode colors tags$script(survey_css(   theme = \"dark\",   primary = \"#7289da\",   background = \"#2c2f33\" )) } # }"},{"path":"/reference/survey_logger.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny App Logger Class ‚Äî survey_logger","title":"Shiny App Logger Class ‚Äî survey_logger","text":"R6 class provides asynchronous logging functionality survey responses","code":""},{"path":"/reference/survey_logger.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Shiny App Logger Class ‚Äî survey_logger","text":"R6 class object","code":""},{"path":"/reference/survey_logger.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shiny App Logger Class ‚Äî survey_logger","text":"class handles asynchronous logging survey responses PostgreSQL database. uses connection pooling futures efficient database operations. class maintains single logging table per instance handles database connections internally.","code":""},{"path":"/reference/survey_logger.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public Fields","title":"Shiny App Logger Class ‚Äî survey_logger","text":"log_table character. Name database table logging session_id character. Unique identifier current session survey_name character. Name survey logged db_params list. Database connection parameters","code":""},{"path":"/reference/survey_logger.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Shiny App Logger Class ‚Äî survey_logger","text":"initialize(log_table, session_id, survey_name, db_config = NULL) Creates new logger instance log_table character. Name logging table session_id character. Unique session identifier survey_name character. Name survey db_config list. Optional database configuration parameters log_message(message, type = \"INFO\", zone = \"DEFAULT\") Logs message asynchronously message character. Message log type character. Type message (e.g., \"INFO\", \"ERROR\") zone character. Zone identifier message categorization","code":""},{"path":"/reference/survey_logger.html","id":"private-methods","dir":"Reference","previous_headings":"","what":"Private Methods","title":"Shiny App Logger Class ‚Äî survey_logger","text":"ensure_table_exists() Creates logging table exist. Uses global connection pool execute CREATE TABLE EXISTS query.","code":""},{"path":"/reference/survey_logger.html","id":"public-fields-1","dir":"Reference","previous_headings":"","what":"Public fields","title":"Shiny App Logger Class ‚Äî survey_logger","text":"log_table Name database table logging session_id Unique identifier current session survey_name Name survey logged db_params List database connection parameters","code":""},{"path":[]},{"path":"/reference/survey_logger.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Shiny App Logger Class ‚Äî survey_logger","text":"survey_logger$new() survey_logger$log_message() survey_logger$clone()","code":""},{"path":"/reference/survey_logger.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Shiny App Logger Class ‚Äî survey_logger","text":"Initialize new survey logger instance","code":""},{"path":"/reference/survey_logger.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny App Logger Class ‚Äî survey_logger","text":"","code":"survey_logger$new(log_table, session_id, survey_name)"},{"path":"/reference/survey_logger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny App Logger Class ‚Äî survey_logger","text":"log_table character. Name logging table session_id character. Unique session identifier survey_name character. Name survey","code":""},{"path":"/reference/survey_logger.html","id":"method-log-message-","dir":"Reference","previous_headings":"","what":"Method log_message()","title":"Shiny App Logger Class ‚Äî survey_logger","text":"Log message asynchronously database","code":""},{"path":"/reference/survey_logger.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny App Logger Class ‚Äî survey_logger","text":"","code":"survey_logger$log_message(message, type = \"INFO\", zone = \"DEFAULT\")"},{"path":"/reference/survey_logger.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny App Logger Class ‚Äî survey_logger","text":"message character. Message log type character. Type message (default: \"INFO\") zone character. Zone identifier message categorization (default: \"DEFAULT\")","code":""},{"path":"/reference/survey_logger.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Shiny App Logger Class ‚Äî survey_logger","text":"invisible(NULL)","code":""},{"path":"/reference/survey_logger.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Shiny App Logger Class ‚Äî survey_logger","text":"objects class cloneable method.","code":""},{"path":"/reference/survey_logger.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny App Logger Class ‚Äî survey_logger","text":"","code":"survey_logger$clone(deep = FALSE)"},{"path":"/reference/survey_logger.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny App Logger Class ‚Äî survey_logger","text":"deep Whether make deep clone.","code":""},{"path":"/reference/survey_logger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny App Logger Class ‚Äî survey_logger","text":"","code":"if (FALSE) { # \\dontrun{ # Initialize logger logger <- survey_logger$new(   log_table = \"survey_logs\",   session_id = \"user123\",   survey_name = \"customer_feedback\" )  # Log different types of messages logger$log_message(\"Survey started\", \"INFO\", \"initialization\") logger$log_message(\"Question 1 completed\", \"INFO\", \"progress\") logger$log_message(\"Invalid response format\", \"ERROR\", \"validation\") } # }"},{"path":"/reference/survey_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Single Survey ‚Äî survey_single","title":"Create a Single Survey ‚Äî survey_single","text":"Creates Shiny application single survey database integration. Responses stored PostgreSQL database configurable table name.","code":""},{"path":"/reference/survey_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Single Survey ‚Äî survey_single","text":"","code":"survey_single(   json,   show_response = TRUE,   theme = \"defaultV2\",   theme_color = \"#003594\",   theme_mode = \"light\",   shiny_config = NULL,   db_config = list(host = Sys.getenv(\"HOST\"), port = as.numeric(Sys.getenv(\"PORT\")),     db_name = Sys.getenv(\"DB_NAME\"), user = Sys.getenv(\"USER\"), password =     Sys.getenv(\"PASSWORD\"), write_table = Sys.getenv(\"WRITE_TABLE\"), log_table =     Sys.getenv(\"LOG_TABLE\")) )"},{"path":"/reference/survey_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Single Survey ‚Äî survey_single","text":"json Survey JSON string object defining survey structure show_response Logical. Whether show responses submission (default: TRUE) theme Theme name SurveyJS: \"defaultV2\" \"modern\" (default: \"defaultV2\") theme_color Primary color hex code theme customization theme_mode Color mode selection: \"light\" \"dark\" (default: \"light\") shiny_config Optional list. Shiny configuration parameters passed configure_shiny() db_config List. Database connection parameters (defaults environment variables): host: Database host (default: HOST environment variable) port: Database port (default: PORT environment variable) db_name: Database name (default: DB_NAME environment variable) user: Database username (default: USER environment variable) password: Database password (default: PASSWORD environment variable) write_table: Table name write survey data (default: WRITE_TABLE environment variable) write_table: Table name write log messages (default: LOG_TABLE environment variable)","code":""},{"path":"/reference/survey_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Single Survey ‚Äî survey_single","text":"Shiny application object","code":""},{"path":"/reference/survey_single_js.html","id":null,"dir":"Reference","previous_headings":"","what":"Single Survey JavaScript ‚Äî survey_single_js","title":"Single Survey JavaScript ‚Äî survey_single_js","text":"Returns JavaScript code needed initialize handle single survey Shiny application. JavaScript code sets event handlers survey completion enables communication survey Shiny.","code":""},{"path":"/reference/survey_single_js.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single Survey JavaScript ‚Äî survey_single_js","text":"","code":"survey_single_js()"},{"path":"/reference/survey_single_js.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Single Survey JavaScript ‚Äî survey_single_js","text":"character string containing JavaScript code survey initialization","code":""}]
